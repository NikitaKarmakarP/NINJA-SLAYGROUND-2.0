#include <vector>
using namespace std;

vector<int> spiralMatrix(vector<vector<int>>& MATRIX) {
    vector<int> result;
    if (MATRIX.empty()) return result;

    int top = 0, bottom = MATRIX.size() - 1;
    int left = 0, right = MATRIX[0].size() - 1;

    while (top <= bottom && left <= right) {
        // Traverse from left to right along the top row
        for (int j = left; j <= right; ++j) {
            result.push_back(MATRIX[top][j]);
        }
        ++top;

        // Traverse from top to bottom along the right column
        for (int i = top; i <= bottom; ++i) {
            result.push_back(MATRIX[i][right]);
        }
        --right;

        // Traverse from right to left along the bottom row (if still within bounds)
        if (top <= bottom) {
            for (int j = right; j >= left; --j) {
                result.push_back(MATRIX[bottom][j]);
            }
            --bottom;
        }

        // Traverse from bottom to top along the left column (if still within bounds)
        if (left <= right) {
            for (int i = bottom; i >= top; --i) {
                result.push_back(MATRIX[i][left]);
            }
            ++left;
        }
    }
    return result;
}
